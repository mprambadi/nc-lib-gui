import{r as l,L as F,bF as N,aM as k,bb as q,g as J,f8 as O,X as U,Y as B,C as L}from"./entry.96205fa0.js";import{a as X}from"./useSmartsheetStore.7d51347e.js";import{u as Y}from"./useSharedView.9e320acb.js";import{p as $}from"./dataUtils.fb0a3616.js";import{b as G}from"./index.9b87fcff.js";import{a as H,b as K}from"./bases.965a49bb.js";import{u as Q}from"./index.e034edbd.js";const W=s=>s.map(o=>({row:{...o},oldRow:{...o},rowMeta:{}})),[ia,Z]=Q((s,o,R=!1,e)=>{if(!s)throw new Error("Table meta is not available");const m=1e3,u=l([]),{api:j}=F(),{base:i}=N(H()),{$api:d}=L(),{isUIAllowed:w}=k(),c=l(R)||q(G,l(!1)),{sorts:h,nestedFilters:S}=X(),{sharedView:A,fetchSharedViewData:C}=Y(),p=l({}),y=l(),f=l({page:1,pageSize:m}),E=J(()=>({limit:f.value.pageSize??m,where:(e==null?void 0:e.value)??""}));async function b(){var t,r,n;const{count:a}=await d.dbViewRow.count(O,(t=i==null?void 0:i.value)==null?void 0:t.title,(r=s==null?void 0:s.value)==null?void 0:r.id,(n=o==null?void 0:o.value)==null?void 0:n.id);f.value.totalRows=a}async function I(){var a,t,r;!((a=o==null?void 0:o.value)!=null&&a.id)||!((t=s==null?void 0:s.value)!=null&&t.columns)||(p.value=c.value?(r=A.value)==null?void 0:r.view:await d.dbView.mapRead(o.value.id),y.value=s.value.columns.filter(n=>n.id===p.value.fk_geo_data_col_id)[0]||{})}async function P(){var t,r,n;if((!((t=i==null?void 0:i.value)!=null&&t.id)||!((r=s.value)!=null&&r.id)||!((n=o.value)!=null&&n.id))&&!(c!=null&&c.value))return;const a=c.value?await C({sortsArr:h.value,filtersArr:S.value}):await j.dbViewRow.list("noco",i.value.id,s.value.id,o.value.id,{...E.value,...w("filterSync")?{}:{filterArrJson:JSON.stringify(S.value)},where:e==null?void 0:e.value});u.value=W(a.list)}async function z(a){var t;!((t=o==null?void 0:o.value)!=null&&t.id)||!w("dataEdit")||await d.dbView.mapUpdate(o.value.id,a)}const{getMeta:T}=K();async function V(a,t={},{metaValue:r=s.value,viewMetaValue:n=o.value}={}){const D=a.row;a.rowMeta&&(a.rowMeta.saving=!0);try{const{missingRequiredColumns:v,insertObj:x}=await $({meta:r,ltarState:t,getMeta:T,row:D});if(v.size)return;const g=await d.dbViewRow.create(O,i==null?void 0:i.value.id,r==null?void 0:r.id,n==null?void 0:n.id,x);return Object.assign(a,{row:{...g,...D},rowMeta:{...a.rowMeta||{},new:void 0},oldRow:{...g}}),b(),g}catch(v){U.error(await B(v))}finally{a.rowMeta&&(a.rowMeta.saving=!1)}}function _(a=u.value.length){return u.value.splice(a,0,{row:{},oldRow:{},rowMeta:{new:!0}}),u.value[a]}return{formattedData:u,loadMapData:P,loadMapMeta:I,updateMapMeta:z,mapMetaData:p,geoDataFieldColumn:y,addEmptyRow:_,insertRow:V,syncCount:b,paginationData:f}});function ea(){const s=Z();if(s==null)throw new Error("Please call `useProvideMapViewStore` on the appropriate parent component");return s}export{ea as a,ia as u};
