import{n as q,o as D,c as F,a9 as M,aK as P,f as W,u as j,bF as y,r as _,g as S,H as x,i as N,l as I,P as V,w as g,b as R,O as d,a as X,S as $}from"./entry.5958c07b.js";import{u as T}from"./config.c8203633.js";import{u as H}from"./sidebar.f5d81718.js";import"./views.4281cbf1.js";import"./bases.e6c8e3c4.js";import"./index.0feaca99.js";import"./useSharedView.e8f68616.js";import"./index.9b87fcff.js";const K={name:"splitpanes",emits:["ready","resize","resized","pane-click","pane-maximize","pane-add","pane-remove","splitter-click"],props:{horizontal:{type:Boolean},pushOtherPanes:{type:Boolean,default:!0},dblClickSplitter:{type:Boolean,default:!0},rtl:{type:Boolean,default:!1},firstSplitter:{type:Boolean}},provide(){return{requestUpdate:this.requestUpdate,onPaneAdd:this.onPaneAdd,onPaneRemove:this.onPaneRemove,onPaneClick:this.onPaneClick}},data:()=>({container:null,ready:!1,panes:[],touch:{mouseDown:!1,dragging:!1,activeSplitter:null},splitterTaps:{splitter:null,timeoutId:null}}),computed:{panesCount(){return this.panes.length},indexedPanes(){return this.panes.reduce((e,t)=>(e[t.id]=t)&&e,{})}},methods:{updatePaneComponents(){this.panes.forEach(e=>{e.update&&e.update({[this.horizontal?"height":"width"]:`${this.indexedPanes[e.id].size}%`})})},bindEvents(){document.addEventListener("mousemove",this.onMouseMove,{passive:!1}),document.addEventListener("mouseup",this.onMouseUp),"ontouchstart"in window&&(document.addEventListener("touchmove",this.onMouseMove,{passive:!1}),document.addEventListener("touchend",this.onMouseUp))},unbindEvents(){document.removeEventListener("mousemove",this.onMouseMove,{passive:!1}),document.removeEventListener("mouseup",this.onMouseUp),"ontouchstart"in window&&(document.removeEventListener("touchmove",this.onMouseMove,{passive:!1}),document.removeEventListener("touchend",this.onMouseUp))},onMouseDown(e,t){this.bindEvents(),this.touch.mouseDown=!0,this.touch.activeSplitter=t},onMouseMove(e){this.touch.mouseDown&&(e.preventDefault(),this.touch.dragging=!0,this.calculatePanesSize(this.getCurrentMouseDrag(e)),this.$emit("resize",this.panes.map(t=>({min:t.min,max:t.max,size:t.size}))))},onMouseUp(){this.touch.dragging&&this.$emit("resized",this.panes.map(e=>({min:e.min,max:e.max,size:e.size}))),this.touch.mouseDown=!1,setTimeout(()=>{this.touch.dragging=!1,this.unbindEvents()},100)},onSplitterClick(e,t){"ontouchstart"in window&&(e.preventDefault(),this.dblClickSplitter&&(this.splitterTaps.splitter===t?(clearTimeout(this.splitterTaps.timeoutId),this.splitterTaps.timeoutId=null,this.onSplitterDblClick(e,t),this.splitterTaps.splitter=null):(this.splitterTaps.splitter=t,this.splitterTaps.timeoutId=setTimeout(()=>{this.splitterTaps.splitter=null},500)))),this.touch.dragging||this.$emit("splitter-click",this.panes[t])},onSplitterDblClick(e,t){let n=0;this.panes=this.panes.map((s,i)=>(s.size=i===t?s.max:s.min,i!==t&&(n+=s.min),s)),this.panes[t].size-=n,this.$emit("pane-maximize",this.panes[t]),this.$emit("resized",this.panes.map(s=>({min:s.min,max:s.max,size:s.size})))},onPaneClick(e,t){this.$emit("pane-click",this.indexedPanes[t])},getCurrentMouseDrag(e){const t=this.container.getBoundingClientRect(),{clientX:n,clientY:s}="ontouchstart"in window&&e.touches?e.touches[0]:e;return{x:n-t.left,y:s-t.top}},getCurrentDragPercentage(e){e=e[this.horizontal?"y":"x"];const t=this.container[this.horizontal?"clientHeight":"clientWidth"];return this.rtl&&!this.horizontal&&(e=t-e),e*100/t},calculatePanesSize(e){const t=this.touch.activeSplitter;let n={prevPanesSize:this.sumPrevPanesSize(t),nextPanesSize:this.sumNextPanesSize(t),prevReachedMinPanes:0,nextReachedMinPanes:0};const s=0+(this.pushOtherPanes?0:n.prevPanesSize),i=100-(this.pushOtherPanes?0:n.nextPanesSize),o=Math.max(Math.min(this.getCurrentDragPercentage(e),i),s);let a=[t,t+1],r=this.panes[a[0]]||null,u=this.panes[a[1]]||null;const c=r.max<100&&o>=r.max+n.prevPanesSize,p=u.max<100&&o<=100-(u.max+this.sumNextPanesSize(t+1));if(c||p){c?(r.size=r.max,u.size=Math.max(100-r.max-n.prevPanesSize-n.nextPanesSize,0)):(r.size=Math.max(100-u.max-n.prevPanesSize-this.sumNextPanesSize(t+1),0),u.size=u.max);return}if(this.pushOtherPanes){const m=this.doPushOtherPanes(n,o);if(!m)return;({sums:n,panesToResize:a}=m),r=this.panes[a[0]]||null,u=this.panes[a[1]]||null}r!==null&&(r.size=Math.min(Math.max(o-n.prevPanesSize-n.prevReachedMinPanes,r.min),r.max)),u!==null&&(u.size=Math.min(Math.max(100-o-n.nextPanesSize-n.nextReachedMinPanes,u.min),u.max))},doPushOtherPanes(e,t){const n=this.touch.activeSplitter,s=[n,n+1];return t<e.prevPanesSize+this.panes[s[0]].min&&(s[0]=this.findPrevExpandedPane(n).index,e.prevReachedMinPanes=0,s[0]<n&&this.panes.forEach((i,o)=>{o>s[0]&&o<=n&&(i.size=i.min,e.prevReachedMinPanes+=i.min)}),e.prevPanesSize=this.sumPrevPanesSize(s[0]),s[0]===void 0)?(e.prevReachedMinPanes=0,this.panes[0].size=this.panes[0].min,this.panes.forEach((i,o)=>{o>0&&o<=n&&(i.size=i.min,e.prevReachedMinPanes+=i.min)}),this.panes[s[1]].size=100-e.prevReachedMinPanes-this.panes[0].min-e.prevPanesSize-e.nextPanesSize,null):t>100-e.nextPanesSize-this.panes[s[1]].min&&(s[1]=this.findNextExpandedPane(n).index,e.nextReachedMinPanes=0,s[1]>n+1&&this.panes.forEach((i,o)=>{o>n&&o<s[1]&&(i.size=i.min,e.nextReachedMinPanes+=i.min)}),e.nextPanesSize=this.sumNextPanesSize(s[1]-1),s[1]===void 0)?(e.nextReachedMinPanes=0,this.panes[this.panesCount-1].size=this.panes[this.panesCount-1].min,this.panes.forEach((i,o)=>{o<this.panesCount-1&&o>=n+1&&(i.size=i.min,e.nextReachedMinPanes+=i.min)}),this.panes[s[0]].size=100-e.prevPanesSize-e.nextReachedMinPanes-this.panes[this.panesCount-1].min-e.nextPanesSize,null):{sums:e,panesToResize:s}},sumPrevPanesSize(e){return this.panes.reduce((t,n,s)=>t+(s<e?n.size:0),0)},sumNextPanesSize(e){return this.panes.reduce((t,n,s)=>t+(s>e+1?n.size:0),0)},findPrevExpandedPane(e){return[...this.panes].reverse().find(t=>t.index<e&&t.size>t.min)||{}},findNextExpandedPane(e){return this.panes.find(t=>t.index>e+1&&t.size>t.min)||{}},checkSplitpanesNodes(){Array.from(this.container.children).forEach(e=>{const t=e.classList.contains("splitpanes__pane"),n=e.classList.contains("splitpanes__splitter");!t&&!n&&(e.parentNode.removeChild(e),console.warn("Splitpanes: Only <pane> elements are allowed at the root of <splitpanes>. One of your DOM nodes was removed."))})},addSplitter(e,t,n=!1){const s=e-1,i=document.createElement("div");i.classList.add("splitpanes__splitter"),n||(i.onmousedown=o=>this.onMouseDown(o,s),typeof window<"u"&&"ontouchstart"in window&&(i.ontouchstart=o=>this.onMouseDown(o,s)),i.onclick=o=>this.onSplitterClick(o,s+1)),this.dblClickSplitter&&(i.ondblclick=o=>this.onSplitterDblClick(o,s+1)),t.parentNode.insertBefore(i,t)},removeSplitter(e){e.onmousedown=void 0,e.onclick=void 0,e.ondblclick=void 0,e.parentNode.removeChild(e)},redoSplitters(){const e=Array.from(this.container.children);e.forEach(n=>{n.className.includes("splitpanes__splitter")&&this.removeSplitter(n)});let t=0;e.forEach(n=>{n.className.includes("splitpanes__pane")&&(!t&&this.firstSplitter?this.addSplitter(t,n,!0):t&&this.addSplitter(t,n),t++)})},requestUpdate({target:e,...t}){const n=this.indexedPanes[e._.uid];Object.entries(t).forEach(([s,i])=>n[s]=i)},onPaneAdd(e){let t=-1;Array.from(e.$el.parentNode.children).some(i=>(i.className.includes("splitpanes__pane")&&t++,i===e.$el));const n=parseFloat(e.minSize),s=parseFloat(e.maxSize);this.panes.splice(t,0,{id:e._.uid,index:t,min:isNaN(n)?0:n,max:isNaN(s)?100:s,size:e.size===null?null:parseFloat(e.size),givenSize:e.size,update:e.update}),this.panes.forEach((i,o)=>i.index=o),this.ready&&this.$nextTick(()=>{this.redoSplitters(),this.resetPaneSizes({addedPane:this.panes[t]}),this.$emit("pane-add",{index:t,panes:this.panes.map(i=>({min:i.min,max:i.max,size:i.size}))})})},onPaneRemove(e){const t=this.panes.findIndex(s=>s.id===e._.uid),n=this.panes.splice(t,1)[0];this.panes.forEach((s,i)=>s.index=i),this.$nextTick(()=>{this.redoSplitters(),this.resetPaneSizes({removedPane:{...n,index:t}}),this.$emit("pane-remove",{removed:n,panes:this.panes.map(s=>({min:s.min,max:s.max,size:s.size}))})})},resetPaneSizes(e={}){!e.addedPane&&!e.removedPane?this.initialPanesSizing():this.panes.some(t=>t.givenSize!==null||t.min||t.max<100)?this.equalizeAfterAddOrRemove(e):this.equalize(),this.ready&&this.$emit("resized",this.panes.map(t=>({min:t.min,max:t.max,size:t.size})))},equalize(){const e=100/this.panesCount;let t=0;const n=[],s=[];this.panes.forEach(i=>{i.size=Math.max(Math.min(e,i.max),i.min),t-=i.size,i.size>=i.max&&n.push(i.id),i.size<=i.min&&s.push(i.id)}),t>.1&&this.readjustSizes(t,n,s)},initialPanesSizing(){let e=100;const t=[],n=[];let s=0;this.panes.forEach(o=>{e-=o.size,o.size!==null&&s++,o.size>=o.max&&t.push(o.id),o.size<=o.min&&n.push(o.id)});let i=100;e>.1&&(this.panes.forEach(o=>{o.size===null&&(o.size=Math.max(Math.min(e/(this.panesCount-s),o.max),o.min)),i-=o.size}),i>.1&&this.readjustSizes(e,t,n))},equalizeAfterAddOrRemove({addedPane:e,removedPane:t}={}){let n=100/this.panesCount,s=0;const i=[],o=[];e&&e.givenSize!==null&&(n=(100-e.givenSize)/(this.panesCount-1)),this.panes.forEach(a=>{s-=a.size,a.size>=a.max&&i.push(a.id),a.size<=a.min&&o.push(a.id)}),!(Math.abs(s)<.1)&&(this.panes.forEach(a=>{e&&e.givenSize!==null&&e.id===a.id||(a.size=Math.max(Math.min(n,a.max),a.min)),s-=a.size,a.size>=a.max&&i.push(a.id),a.size<=a.min&&o.push(a.id)}),s>.1&&this.readjustSizes(s,i,o))},readjustSizes(e,t,n){let s;e>0?s=e/(this.panesCount-t.length):s=e/(this.panesCount-n.length),this.panes.forEach((i,o)=>{if(e>0&&!t.includes(i.id)){const a=Math.max(Math.min(i.size+s,i.max),i.min),r=a-i.size;e-=r,i.size=a}else if(!n.includes(i.id)){const a=Math.max(Math.min(i.size+s,i.max),i.min),r=a-i.size;e-=r,i.size=a}i.update({[this.horizontal?"height":"width"]:`${this.indexedPanes[i.id].size}%`})}),Math.abs(e)>.1&&this.$nextTick(()=>{this.ready&&console.warn("Splitpanes: Could not resize panes correctly due to their constraints.")})}},watch:{panes:{deep:!0,immediate:!1,handler(){this.updatePaneComponents()}},horizontal(){this.updatePaneComponents()},firstSplitter(){this.redoSplitters()},dblClickSplitter(e){[...this.container.querySelectorAll(".splitpanes__splitter")].forEach((t,n)=>{t.ondblclick=e?s=>this.onSplitterDblClick(s,n):void 0})}},beforeUnmount(){this.ready=!1},mounted(){this.container=this.$refs.container,this.checkSplitpanesNodes(),this.redoSplitters(),this.resetPaneSizes(),this.$emit("ready"),this.ready=!0},render(){return q("div",{ref:"container",class:["splitpanes",`splitpanes--${this.horizontal?"horizontal":"vertical"}`,{"splitpanes--dragging":this.touch.dragging}]},this.$slots.default())}},Y=(e,t)=>{const n=e.__vccOpts||e;for(const[s,i]of t)n[s]=i;return n},G={name:"pane",inject:["requestUpdate","onPaneAdd","onPaneRemove","onPaneClick"],props:{size:{type:[Number,String],default:null},minSize:{type:[Number,String],default:0},maxSize:{type:[Number,String],default:100}},data:()=>({style:{}}),mounted(){this.onPaneAdd(this)},beforeUnmount(){this.onPaneRemove(this)},methods:{update(e){this.style=e}},computed:{sizeNumber(){return this.size||this.size===0?parseFloat(this.size):null},minSizeNumber(){return parseFloat(this.minSize)},maxSizeNumber(){return parseFloat(this.maxSize)}},watch:{sizeNumber(e){this.requestUpdate({target:this,size:e})},minSizeNumber(e){this.requestUpdate({target:this,min:e})},maxSizeNumber(e){this.requestUpdate({target:this,max:e})}}};function J(e,t,n,s,i,o){return D(),F("div",{class:"splitpanes__pane",onClick:t[0]||(t[0]=a=>o.onPaneClick(a,e._.uid)),style:P(e.style)},[M(e.$slots,"default")],4)}const O=Y(G,[["render",J]]);const f=250,oe=W({__name:"View",setup(e){const n=j().currentRoute,{isMobileMode:s}=y(T()),{isLeftSidebarOpen:i,leftSidebarWidthPercent:o,leftSideBarSize:a,leftSidebarState:r,mobileNormalizedSidebarSize:u}=y(H()),c=_(),p=_(window.innerWidth),m=S({get:()=>a.value.current,set:l=>{a.value.current=l,a.value.old=l}}),{handleSidebarOpenOnMobileForNonViews:L}=T(),U=S(()=>100-a.value.current),B=S(()=>s.value?i.value?0:100:U.value),z=S(()=>s.value?p.value:a.value.old*p.value/100);x(m,()=>{o.value=m.value}),x(i,()=>{a.value.current=a.value.old,i.value?(setTimeout(()=>r.value="openStart",0),setTimeout(()=>r.value="openEnd",f)):(a.value.old=a.value.current,a.value.current=0,r.value="hiddenStart",setTimeout(()=>{r.value="hiddenEnd"},f))});function w(l){s.value||c.value&&r.value!=="openEnd"&&(l.clientX<4&&["hiddenEnd","peekCloseEnd"].includes(r.value)?(r.value="peekOpenStart",setTimeout(()=>{r.value="peekOpenEnd"},f)):l.clientX>z.value+10&&r.value==="peekOpenEnd"&&(r.value="peekCloseOpen",setTimeout(()=>{r.value="peekCloseEnd"},f)))}function E(){p.value=window.innerWidth,C(m.value)}N(()=>{document.addEventListener("mousemove",w),window.addEventListener("resize",E)}),I(()=>{document.removeEventListener("mousemove",w),window.removeEventListener("resize",E)}),x(n,()=>{n.value.name==="index-index"&&(i.value=!0)}),x(s,()=>{i.value=!s.value}),x(r,()=>{r.value==="peekCloseEnd"&&setTimeout(()=>{r.value="hiddenEnd"},f)}),N(()=>{L()});const b=l=>{const h=parseFloat(getComputedStyle(document.documentElement).fontSize);return l*h};function C(l){if(s.value)return;const h=l*p.value/100,v=parseFloat(getComputedStyle(document.documentElement).fontSize),k=h/v;if(k<16){a.value.old=16*v/p.value*100,i.value&&(a.value.current=a.value.old);return}else if(k>23.5){a.value.old=23.5*v/p.value*100,i.value&&(a.value.current=a.value.old);return}a.value.old=l,a.value.current=a.value.old}const A=S(()=>{const l=b(23.5),h=b(16);return z.value>l?l:z.value<h?h:z.value});return(l,h)=>(D(),V(d(K),{class:$(["nc-sidebar-content-resizable-wrapper !w-screen h-full",{"hide-resize-bar":!d(i)||d(r)==="openStart"}]),onResize:h[0]||(h[0]=v=>C(v[0].size))},{default:g(()=>[R(d(O),{"min-size":"15%",size:d(u),"max-size":"40%",class:"nc-sidebar-splitpane !sm:max-w-94 relative !overflow-visible flex",style:P({width:`${d(u)}%`})},{default:g(()=>[X("div",{ref_key:"wrapperRef",ref:c,class:$(["nc-sidebar-wrapper relative flex flex-col h-full justify-center !sm:max-w-94 absolute overflow-visible",{mobile:d(s),"minimized-height":!d(i),"hide-sidebar":["hiddenStart","hiddenEnd","peekCloseEnd"].includes(d(r))}]),style:P({width:d(r)==="hiddenEnd"?"0px":`${d(z)}px`,minWidth:d(r)==="hiddenEnd"?"0px":`${d(A)}px`})},[M(l.$slots,"sidebar")],6)]),_:3},8,["size","style"]),R(d(O),{size:d(B),class:"flex-grow",style:P({"min-width":`${100-d(u)}%`})},{default:g(()=>[M(l.$slots,"content")]),_:3},8,["size","style"])]),_:3},8,["class"]))}});export{oe as default};
